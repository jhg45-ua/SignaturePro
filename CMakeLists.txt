# ==========================================
# CONFIGURACI√ìN PRINCIPAL DEL PROYECTO
# ==========================================
# Sistema de construcci√≥n CMake para aplicaci√≥n wxWidgets + SDL3
# Integra GUI nativa (wxWidgets) con renderizado de alto rendimiento (SDL3)

cmake_minimum_required(VERSION 3.20)  # Versi√≥n m√≠nima de CMake requerida
project(wxWidgets_SDL3)               # Nombre del proyecto

# === CONFIGURACI√ìN DEL EST√ÅNDAR C++ ===
set(CMAKE_CXX_STANDARD 17)            # Usar C++17 para caracter√≠sticas modernas
set(CMAKE_CXX_STANDARD_REQUIRED ON)   # Hacer obligatorio el est√°ndar especificado
set(CMAKE_EXPORT_COMPILE_COMMANDS ON) # Generar compile_commands.json para IDEs

# ==========================================
# B√öSQUEDA Y CONFIGURACI√ìN DE DEPENDENCIAS
# ==========================================

# === SDL3 FRAMEWORK (macOS) ===
# Buscar el framework SDL3 instalado en el sistema macOS
find_library(SDL3_LIBRARY SDL3 REQUIRED)

# === SPDLOG (LOGGING) ===
# Buscar spdlog para logging (instalado v√≠a Homebrew)
find_package(PkgConfig REQUIRED)          # PkgConfig necesario para spdlog
pkg_check_modules(SPDLOG REQUIRED spdlog) # Configurar spdlog

# ==========================================
# CONFIGURACI√ìN DE APLICACIONES WXWIDGETS
# ==========================================

# === B√öSQUEDA DE WXWIDGETS ===
# Buscar wxWidgets con componentes core (ventanas, eventos) y base (utilidades)
find_package(wxWidgets REQUIRED COMPONENTS core base)

# Si wxWidgets se encuentra correctamente, proceder con la configuraci√≥n
if(wxWidgets_FOUND)
    # Incluir configuraci√≥n autom√°tica de wxWidgets
    include(${wxWidgets_USE_FILE})
    
    # === CREACI√ìN DE EJECUTABLES ===
    
    # Aplicaci√≥n modular (arquitectura separada)
    add_executable(wxWidgets_Modular_Demo
        src/main_modular.cpp      # Punto de entrada modular
        src/my_app.cpp           # Clase aplicaci√≥n principal
        src/my_frame.cpp         # Clase frame principal
        src/sdl3_manager.cpp     # Manager de SDL3
        src/logger.cpp           # Sistema de logging
    )
    
    # NOTA: La versi√≥n original monol√≠tica se movi√≥ a archive/ como referencia
    
    # === DIRECTORIOS DE INCLUSI√ìN ===
    # Configurar rutas donde buscar archivos de cabecera (.h/.hpp)
    
    # Directorios comunes para el ejecutable modular
    set(COMMON_INCLUDE_DIRS
        ${wxWidgets_INCLUDE_DIRS}                        # Headers de wxWidgets
        ${SPDLOG_INCLUDE_DIRS}                          # Headers de spdlog
        /Library/Frameworks/SDL3.framework/Headers      # SDL3 (Homebrew)
        /System/Library/Frameworks/SDL3.framework/Headers # SDL3 (Sistema)
        src/                                            # Headers locales del proyecto
    )
    
    target_include_directories(wxWidgets_Modular_Demo PRIVATE ${COMMON_INCLUDE_DIRS})
    
    # === ENLAZADO DE LIBRER√çAS ===
    # Vincular todas las librer√≠as necesarias al ejecutable modular
    
    # Librer√≠as necesarias
    set(COMMON_LIBRARIES
        ${wxWidgets_LIBRARIES}  # Librer√≠as de wxWidgets (GUI nativa)
        ${SDL3_LIBRARY}         # SDL3 framework (renderizado)
        ${SPDLOG_LIBRARIES}     # spdlog (sistema de logging)
    )
    
    target_link_libraries(wxWidgets_Modular_Demo ${COMMON_LIBRARIES})
    
    # === CONFIGURACI√ìN DE SALIDA ===
    # Definir directorio donde se generar√° el ejecutable
    set_target_properties(wxWidgets_Modular_Demo PROPERTIES
        RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin  # Ejecutable en /build/bin/
    )
    
    # === CONFIGURACI√ìN DE COMPILACI√ìN ===
    # Aplicar definiciones y flags espec√≠ficos de wxWidgets
    target_compile_definitions(wxWidgets_Modular_Demo PRIVATE ${wxWidgets_DEFINITIONS})
    target_compile_options(wxWidgets_Modular_Demo PRIVATE ${wxWidgets_CXX_FLAGS})
    
    # === MENSAJE DE CONFIRMACI√ìN ===
    message(STATUS "‚úÖ wxWidgets encontrado - La aplicaci√≥n modular ser√° construida")
    message(STATUS "   üì¶ wxWidgets_Modular_Demo - Versi√≥n con arquitectura modular")
else()
    # === MENSAJE DE ADVERTENCIA ===
    message(WARNING "‚ö†Ô∏è  wxWidgets no encontrado - Los ejemplos wxWidgets no ser√°n construidos")
endif()
