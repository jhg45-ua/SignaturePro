# ==========================================
# CONFIGURACI√ìN PRINCIPAL DEL PROYECTO
# ==========================================
# Sistema de construcci√≥n CMake para aplicaci√≥n wxWidgets
# Aplicaci√≥n GUI nativa multiplataforma

cmake_minimum_required(VERSION 3.20)  # Versi√≥n m√≠nima de CMake requerida
project(wxWidgets_App)                # Nombre del proyecto

# === CONFIGURACI√ìN DEL EST√ÅNDAR C++ ===
set(CMAKE_CXX_STANDARD 17)            # Usar C++17 para caracter√≠sticas modernas
set(CMAKE_CXX_STANDARD_REQUIRED ON)   # Hacer obligatorio el est√°ndar especificado
set(CMAKE_EXPORT_COMPILE_COMMANDS ON) # Generar compile_commands.json para IDEs

# ==========================================
# B√öSQUEDA Y CONFIGURACI√ìN DE DEPENDENCIAS
# ==========================================

# === SPDLOG (LOGGING) ===
# Buscar spdlog para logging (instalado v√≠a Homebrew)
find_package(PkgConfig REQUIRED)          # PkgConfig necesario para spdlog
pkg_check_modules(SPDLOG REQUIRED spdlog) # Configurar spdlog

# ==========================================
# CONFIGURACI√ìN DE APLICACIONES WXWIDGETS
# ==========================================

# === B√öSQUEDA DE WXWIDGETS ===
# Buscar wxWidgets con componentes core (ventanas, eventos) y base (utilidades)
find_package(wxWidgets REQUIRED COMPONENTS core base)

# Si wxWidgets se encuentra correctamente, proceder con la configuraci√≥n
if(wxWidgets_FOUND)
    # Incluir configuraci√≥n autom√°tica de wxWidgets
    include(${wxWidgets_USE_FILE})
    
    # === CREACI√ìN DE EJECUTABLES ===
    
    # Aplicaci√≥n wxWidgets
    add_executable(app
        src/main.cpp      # Punto de entrada
        src/my_app.cpp           # Clase aplicaci√≥n principal
        src/my_frame.cpp         # Clase frame principal
        src/second_frame.cpp     # Segunda ventana/p√°gina
        src/modal_dialog.cpp     # Di√°logo modal
        src/logger.cpp           # Sistema de logging
        # Nota: theme.hpp es solo headers, no necesita compilaci√≥n
    )
    
    # === DIRECTORIOS DE INCLUSI√ìN ===
    # Configurar rutas donde buscar archivos de cabecera (.h/.hpp)
    
    # Directorios para el ejecutable
    set(COMMON_INCLUDE_DIRS
        ${wxWidgets_INCLUDE_DIRS}                        # Headers de wxWidgets
        ${SPDLOG_INCLUDE_DIRS}                          # Headers de spdlog
        src/                                            # Headers locales del proyecto
    )
    
    target_include_directories(app PRIVATE ${COMMON_INCLUDE_DIRS})
    
    # === ENLAZADO DE LIBRER√çAS ===
    # Vincular todas las librer√≠as necesarias al ejecutable
    
    # Librer√≠as necesarias
    set(COMMON_LIBRARIES
        ${wxWidgets_LIBRARIES}  # Librer√≠as de wxWidgets (GUI nativa)
        ${SPDLOG_LIBRARIES}     # spdlog (sistema de logging)
    )
    
    target_link_libraries(app ${COMMON_LIBRARIES})
    
    # === CONFIGURACI√ìN DE SALIDA ===
    # Definir directorio donde se generar√° el ejecutable
    set_target_properties(app PROPERTIES
        RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin  # Ejecutable en /build/bin/
    )
    
    # === CONFIGURACI√ìN ESPEC√çFICA PARA MACOS ===
    # Configurar bundle de aplicaci√≥n para macOS en builds Release
    if(APPLE AND CMAKE_BUILD_TYPE STREQUAL "Release")
        set_target_properties(app PROPERTIES
            MACOSX_BUNDLE TRUE                             # Crear bundle de macOS (.app)
            MACOSX_BUNDLE_BUNDLE_NAME "SignaturePro"       # Nombre de la aplicaci√≥n
            MACOSX_BUNDLE_GUI_IDENTIFIER "com.signaturepro.app"  # Identificador √∫nico
            MACOSX_BUNDLE_BUNDLE_VERSION "1.0"             # Versi√≥n del bundle
            MACOSX_BUNDLE_SHORT_VERSION_STRING "1.0"       # Versi√≥n corta
            MACOSX_BUNDLE_LONG_VERSION_STRING "1.0.0"      # Versi√≥n completa
            MACOSX_BUNDLE_COPYRIGHT "¬© 2025 SignaturePro"  # Copyright
            MACOSX_BUNDLE_INFO_PLIST "${CMAKE_SOURCE_DIR}/resources/macos/Info.plist"  # Info.plist personalizado
            MACOSX_BUNDLE_ICON_FILE "signature.icns"       # Archivo de icono
            OUTPUT_NAME "SignaturePro"                     # Nombre del ejecutable
        )
        
        # Copiar el icono al bundle
        set(ICON_FILE "${CMAKE_SOURCE_DIR}/resources/signature.icns")
        set_source_files_properties(${ICON_FILE} PROPERTIES MACOSX_PACKAGE_LOCATION "Resources")
        target_sources(app PRIVATE ${ICON_FILE})
        
        # Mensaje informativo
        message(STATUS "üçé Configurando bundle de macOS para Release")
        message(STATUS "   üìÑ Usando Info.plist: ${CMAKE_SOURCE_DIR}/resources/macos/Info.plist")
        message(STATUS "   üé® Usando icono: ${ICON_FILE}")
    endif()
    
    # === CONFIGURACI√ìN DE COMPILACI√ìN ===
    # Aplicar definiciones y flags espec√≠ficos de wxWidgets
    target_compile_definitions(app PRIVATE ${wxWidgets_DEFINITIONS})
    target_compile_options(app PRIVATE ${wxWidgets_CXX_FLAGS})
    
    # === MENSAJE DE CONFIRMACI√ìN ===
    message(STATUS "‚úÖ wxWidgets encontrado - La aplicaci√≥n ser√° construida")
    message(STATUS "   üì¶ app - Aplicaci√≥n wxWidgets")
    
    # === INFORMACI√ìN ESPEC√çFICA PARA MACOS ===
    if(APPLE AND CMAKE_BUILD_TYPE STREQUAL "Release")
        message(STATUS "")
        message(STATUS "üçé CONFIGURACI√ìN MACOS ACTIVADA:")
        message(STATUS "   ‚Ä¢ Bundle: SignaturePro.app ser√° creado en build/bin/")
        message(STATUS "   ‚Ä¢ Para crear DMG: usar 'cpack' despu√©s del build")
        message(STATUS "   ‚Ä¢ Ubicaci√≥n: ${CMAKE_BINARY_DIR}/bin/SignaturePro.app")
    endif()
else()
    # === MENSAJE DE ADVERTENCIA ===
    message(WARNING "‚ö†Ô∏è  wxWidgets no encontrado - La aplicaci√≥n no ser√° construida")
endif()

# ==========================================
# CONFIGURACI√ìN DE EMPAQUETADO (CPACK)
# ==========================================

# === CPACK PARA MACOS ===
# Configuraci√≥n para crear instaladores/DMG en macOS
if(APPLE)
    set(CPACK_GENERATOR "DragNDrop")                    # Crear archivo DMG
    set(CPACK_PACKAGE_NAME "SignaturePro")             # Nombre del paquete
    set(CPACK_PACKAGE_VERSION "1.0.0")                 # Versi√≥n
    set(CPACK_PACKAGE_VENDOR "SignaturePro Team")      # Desarrollador
    set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Aplicaci√≥n de firma digital") # Descripci√≥n
    set(CPACK_DMG_VOLUME_NAME "SignaturePro Installer") # Nombre del volumen DMG
    set(CPACK_DMG_FORMAT "UDZO")                        # Formato comprimido
    
    # Incluir CPack para habilitar la creaci√≥n de paquetes
    include(CPack)
    
    message(STATUS "üì¶ CPack configurado para crear DMG en macOS")
    message(STATUS "   Usar: 'cpack' para generar el instalador")
endif()
